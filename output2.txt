Line 1: Token = #include <iostream> → Preprocessor Directive
Line 2: Token = #include <string> → Preprocessor Directive
Line 3: Token = using → Keyword
Line 3: Token = namespace → Keyword
Line 3: Token = std → Identifier
Line 3: Token = ; → Separator
Line 6: Token = struct → Keyword
Line 6: Token = Student → Identifier
Line 6: Token = { → Separator
Line 7: Token = string → Keyword
Line 7: Token = name → Identifier
Line 7: Token = ; → Separator
Line 8: Token = int → Keyword
Line 8: Token = rollNumber → Identifier
Line 8: Token = ; → Separator
Line 9: Token = float → Keyword
Line 9: Token = gpa → Identifier
Line 9: Token = ; → Separator
Line 10: Token = } → Separator
Line 10: Token = ; → Separator
Line 13: Token = void → Keyword
Line 13: Token = printStudent → Identifier
Line 13: Token = ( → Separator
Line 13: Token = const → Keyword
Line 13: Token = Student → Identifier
Line 13: Token = & → Operator
Line 13: Token = s → Identifier
Line 13: Token = ) → Separator
Line 13: Token = { → Separator
Line 14: Token = cout → Identifier
Line 14: Token = << → Operator
Line 14: Token = "Student Name: " → String Literal
Line 14: Token = << → Operator
Line 14: Token = s → Identifier
Line 14: Token = . → Separator
Line 14: Token = name → Identifier
Line 14: Token = << → Operator
Line 14: Token = endl → Identifier
Line 14: Token = ; → Separator
Line 15: Token = cout → Identifier
Line 15: Token = << → Operator
Line 15: Token = "Roll Number: " → String Literal
Line 15: Token = << → Operator
Line 15: Token = s → Identifier
Line 15: Token = . → Separator
Line 15: Token = rollNumber → Identifier
Line 15: Token = << → Operator
Line 15: Token = endl → Identifier
Line 15: Token = ; → Separator
Line 16: Token = cout → Identifier
Line 16: Token = << → Operator
Line 16: Token = "GPA: " → String Literal
Line 16: Token = << → Operator
Line 16: Token = s → Identifier
Line 16: Token = . → Separator
Line 16: Token = gpa → Identifier
Line 16: Token = << → Operator
Line 16: Token = endl → Identifier
Line 16: Token = ; → Separator
Line 17: Token = } → Separator
Line 20: Token = Student → Identifier
Line 20: Token = getTopper → Identifier
Line 20: Token = ( → Separator
Line 20: Token = Student → Identifier
Line 20: Token = students → Identifier
Line 20: Token = [ → Separator
Line 20: Token = ] → Separator
Line 20: Token = , → Separator
Line 20: Token = int → Keyword
Line 20: Token = size → Identifier
Line 20: Token = ) → Separator
Line 20: Token = { → Separator
Line 21: Token = float → Keyword
Line 21: Token = maxGPA → Identifier
Line 21: Token = = → Operator
Line 21: Token = - → Operator
Line 21: Token = 1.0 → Float Literal
Line 21: Token = ; → Separator
Line 22: Token = int → Keyword
Line 22: Token = topperIndex → Identifier
Line 22: Token = = → Operator
Line 22: Token = - → Operator
Line 22: Token = 1 → Integer Literal
Line 22: Token = ; → Separator
Line 24: Token = for → Keyword
Line 24: Token = ( → Separator
Line 24: Token = int → Keyword
Line 24: Token = i → Identifier
Line 24: Token = = → Operator
Line 24: Token = 0 → Integer Literal
Line 24: Token = ; → Separator
Line 24: Token = i → Identifier
Line 24: Token = < → Operator
Line 24: Token = size → Identifier
Line 24: Token = ; → Separator
Line 24: Token = i → Identifier
Line 24: Token = ++ → Operator
Line 24: Token = ) → Separator
Line 24: Token = { → Separator
Line 25: Token = if → Keyword
Line 25: Token = ( → Separator
Line 25: Token = students → Identifier
Line 25: Token = [ → Separator
Line 25: Token = i → Identifier
Line 25: Token = ] → Separator
Line 25: Token = . → Separator
Line 25: Token = gpa → Identifier
Line 25: Token = > → Operator
Line 25: Token = maxGPA → Identifier
Line 25: Token = ) → Separator
Line 25: Token = { → Separator
Line 26: Token = maxGPA → Identifier
Line 26: Token = = → Operator
Line 26: Token = students → Identifier
Line 26: Token = [ → Separator
Line 26: Token = i → Identifier
Line 26: Token = ] → Separator
Line 26: Token = . → Separator
Line 26: Token = gpa → Identifier
Line 26: Token = ; → Separator
Line 27: Token = topperIndex → Identifier
Line 27: Token = = → Operator
Line 27: Token = i → Identifier
Line 27: Token = ; → Separator
Line 28: Token = } → Separator
Line 29: Token = } → Separator
Line 31: Token = return → Keyword
Line 31: Token = students → Identifier
Line 31: Token = [ → Separator
Line 31: Token = topperIndex → Identifier
Line 31: Token = ] → Separator
Line 31: Token = ; → Separator
Line 32: Token = } → Separator
Line 34: Token = int → Keyword
Line 34: Token = main → Identifier
Line 34: Token = ( → Separator
Line 34: Token = ) → Separator
Line 34: Token = { → Separator
Line 35: Token = Student → Identifier
Line 35: Token = students → Identifier
Line 35: Token = [ → Separator
Line 35: Token = 3 → Integer Literal
Line 35: Token = ] → Separator
Line 35: Token = = → Operator
Line 35: Token = { → Separator
Line 36: Token = { → Separator
Line 36: Token = "Alice" → String Literal
Line 36: Token = , → Separator
Line 36: Token = 101 → Integer Literal
Line 36: Token = , → Separator
Line 36: Token = 3.8 → Float Literal
Line 36: Token = } → Separator
Line 36: Token = , → Separator
Line 37: Token = { → Separator
Line 37: Token = "Bob" → String Literal
Line 37: Token = , → Separator
Line 37: Token = 102 → Integer Literal
Line 37: Token = , → Separator
Line 37: Token = 3.5 → Float Literal
Line 37: Token = } → Separator
Line 37: Token = , → Separator
Line 38: Token = { → Separator
Line 38: Token = "Charlie" → String Literal
Line 38: Token = , → Separator
Line 38: Token = 103 → Integer Literal
Line 38: Token = , → Separator
Line 38: Token = 3.9 → Float Literal
Line 38: Token = } → Separator
Line 39: Token = } → Separator
Line 39: Token = ; → Separator
Line 41: Token = for → Keyword
Line 41: Token = ( → Separator
Line 41: Token = int → Keyword
Line 41: Token = i → Identifier
Line 41: Token = = → Operator
Line 41: Token = 0 → Integer Literal
Line 41: Token = ; → Separator
Line 41: Token = i → Identifier
Line 41: Token = < → Operator
Line 41: Token = 3 → Integer Literal
Line 41: Token = ; → Separator
Line 41: Token = i → Identifier
Line 41: Token = ++ → Operator
Line 41: Token = ) → Separator
Line 41: Token = { → Separator
Line 42: Token = printStudent → Identifier
Line 42: Token = ( → Separator
Line 42: Token = students → Identifier
Line 42: Token = [ → Separator
Line 42: Token = i → Identifier
Line 42: Token = ] → Separator
Line 42: Token = ) → Separator
Line 42: Token = ; → Separator
Line 43: Token = } → Separator
Line 45: Token = Student → Identifier
Line 45: Token = topper → Identifier
Line 45: Token = = → Operator
Line 45: Token = getTopper → Identifier
Line 45: Token = ( → Separator
Line 45: Token = students → Identifier
Line 45: Token = , → Separator
Line 45: Token = 3 → Integer Literal
Line 45: Token = ) → Separator
Line 45: Token = ; → Separator
Line 46: Token = cout → Identifier
Line 46: Token = << → Operator
Line 46: Token = "Topper is: " → String Literal
Line 46: Token = << → Operator
Line 46: Token = topper → Identifier
Line 46: Token = . → Separator
Line 46: Token = name → Identifier
Line 46: Token = << → Operator
Line 46: Token = " with GPA: " → String Literal
Line 46: Token = << → Operator
Line 46: Token = topper → Identifier
Line 46: Token = . → Separator
Line 46: Token = gpa → Identifier
Line 46: Token = << → Operator
Line 46: Token = endl → Identifier
Line 46: Token = ; → Separator
Line 48: Token = return → Keyword
Line 48: Token = 0 → Integer Literal
Line 48: Token = ; → Separator
Line 49: Token = } → Separator
